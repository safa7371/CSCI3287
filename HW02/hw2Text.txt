-- MySQL Script generated by MySQL Workbench
-- Sun Sep 27 18:59:39 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`NeuteredSpayed_Info`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`NeuteredSpayed_Info` ;

CREATE TABLE IF NOT EXISTS `mydb`.`NeuteredSpayed_Info` (
  `Gender` VARCHAR(45) NOT NULL,
  `NeuterSpay` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Gender`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`PetRecord`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`PetRecord` ;

CREATE TABLE IF NOT EXISTS `mydb`.`PetRecord` (
  `PetID` INT NOT NULL,
  `OwnerName` VARCHAR(45) NOT NULL,
  `PetName` VARCHAR(45) NOT NULL,
  `Breed` VARCHAR(45) NOT NULL,
  `Color` VARCHAR(45) NOT NULL,
  `Markings` VARCHAR(45) NULL,
  `Age` INT NOT NULL,
  `Gender` VARCHAR(45) NOT NULL,
  `NeuteredSpayed_Info_Gender` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`PetID`),
  CONSTRAINT `fk_PetRecord_NeuteredSpayed_Info1`
    FOREIGN KEY (`NeuteredSpayed_Info_Gender`)
    REFERENCES `mydb`.`NeuteredSpayed_Info` (`Gender`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_PetRecord_NeuteredSpayed_Info1_idx` ON `mydb`.`PetRecord` (`NeuteredSpayed_Info_Gender` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mydb`.`PetOwner`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`PetOwner` ;

CREATE TABLE IF NOT EXISTS `mydb`.`PetOwner` (
  `PetID` INT NOT NULL,
  `OwnerName` VARCHAR(45) NOT NULL,
  `PhoneNumber` VARCHAR(45) NOT NULL,
  `PetRecord_PetID` INT NOT NULL,
  PRIMARY KEY (`PetID`, `OwnerName`, `PetRecord_PetID`),
  CONSTRAINT `fk_PetOwner_PetRecord`
    FOREIGN KEY (`PetRecord_PetID`)
    REFERENCES `mydb`.`PetRecord` (`PetID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_PetOwner_PetRecord_idx` ON `mydb`.`PetOwner` (`PetRecord_PetID` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mydb`.`Pet_Visit_Record`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Pet_Visit_Record` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Pet_Visit_Record` (
  `PetID` INT NOT NULL,
  `VisitID` INT NOT NULL,
  `VisitDate` DATETIME NOT NULL,
  `Weight` INT NOT NULL,
  `Temp` INT NOT NULL,
  `BP` INT NOT NULL,
  `Pulse` INT NOT NULL,
  `Respiration` INT NOT NULL,
  `Pain` VARCHAR(45) NOT NULL,
  `VetInitials` VARCHAR(45) NOT NULL,
  `PetRecord_PetID` INT NOT NULL,
  PRIMARY KEY (`VisitID`, `PetID`, `PetRecord_PetID`),
  CONSTRAINT `fk_Pet_Visit_Record_PetRecord1`
    FOREIGN KEY (`PetRecord_PetID`)
    REFERENCES `mydb`.`PetRecord` (`PetID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_Pet_Visit_Record_PetRecord1_idx` ON `mydb`.`Pet_Visit_Record` (`PetRecord_PetID` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mydb`.`Immunization_Type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Immunization_Type` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Immunization_Type` (
  `ImmunizationType` VARCHAR(45) NOT NULL,
  `ImmunizationDetails` VARCHAR(45) NULL,
  PRIMARY KEY (`ImmunizationType`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Immunization_Record`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Immunization_Record` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Immunization_Record` (
  `PetID` INT NOT NULL,
  `ImmunizationID` INT NOT NULL,
  `ImmunizationDate` DATETIME NULL,
  `NextDue` DATETIME NULL,
  `ImmunizationType` VARCHAR(45) NULL,
  `PetRecord_PetID` INT NOT NULL,
  `Immunization_Type_ImmunizationType` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`PetID`, `ImmunizationID`, `PetRecord_PetID`),
  CONSTRAINT `fk_Immunization_Record_PetRecord1`
    FOREIGN KEY (`PetRecord_PetID`)
    REFERENCES `mydb`.`PetRecord` (`PetID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Immunization_Record_Immunization_Type1`
    FOREIGN KEY (`Immunization_Type_ImmunizationType`)
    REFERENCES `mydb`.`Immunization_Type` (`ImmunizationType`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_Immunization_Record_PetRecord1_idx` ON `mydb`.`Immunization_Record` (`PetRecord_PetID` ASC) VISIBLE;

CREATE INDEX `fk_Immunization_Record_Immunization_Type1_idx` ON `mydb`.`Immunization_Record` (`Immunization_Type_ImmunizationType` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mydb`.`Condition_History`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Condition_History` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Condition_History` (
  `PetID` INT NOT NULL,
  `ConditionID` INT NOT NULL,
  `ConditionName` VARCHAR(45) NULL,
  `ConditionDetails` VARCHAR(45) NULL,
  `PetRecord_PetID` INT NOT NULL,
  PRIMARY KEY (`PetID`, `ConditionID`, `PetRecord_PetID`),
  CONSTRAINT `fk_Condition_History_PetRecord1`
    FOREIGN KEY (`PetRecord_PetID`)
    REFERENCES `mydb`.`PetRecord` (`PetID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_Condition_History_PetRecord1_idx` ON `mydb`.`Condition_History` (`PetRecord_PetID` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mydb`.`Surgical_History`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Surgical_History` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Surgical_History` (
  `PetID` INT NOT NULL,
  `SurgicalID` INT NOT NULL,
  `SurgicalDate` DATETIME NULL,
  `ProcedureName` VARCHAR(45) NULL,
  `SurgicalDetails` VARCHAR(45) NULL,
  `PetRecord_PetID` INT NOT NULL,
  PRIMARY KEY (`PetID`, `SurgicalID`, `PetRecord_PetID`),
  CONSTRAINT `fk_Surgical_History_PetRecord1`
    FOREIGN KEY (`PetRecord_PetID`)
    REFERENCES `mydb`.`PetRecord` (`PetID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_Surgical_History_PetRecord1_idx` ON `mydb`.`Surgical_History` (`PetRecord_PetID` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mydb`.`Medical_History`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Medical_History` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Medical_History` (
  `PetID` INT NOT NULL,
  `MedicalID` INT NOT NULL,
  `DHPP` DATETIME NULL,
  `Lepto` DATETIME NULL,
  `Bordetella` DATETIME NULL,
  `Rabies` DATETIME NULL,
  `Lyme` DATETIME NULL,
  `Giardia` DATETIME NULL,
  `FecalExam` DATETIME NULL,
  `HeartwormTest` DATETIME NULL,
  `Other` DATETIME NULL,
  `TimeSpentOutside` INT NOT NULL,
  `PetRecord_PetID` INT NOT NULL,
  PRIMARY KEY (`PetID`, `MedicalID`, `PetRecord_PetID`),
  CONSTRAINT `fk_Medical_History_PetRecord1`
    FOREIGN KEY (`PetRecord_PetID`)
    REFERENCES `mydb`.`PetRecord` (`PetID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_Medical_History_PetRecord1_idx` ON `mydb`.`Medical_History` (`PetRecord_PetID` ASC) VISIBLE;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
